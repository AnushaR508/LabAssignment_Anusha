package com.cg.trainee.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.cg.trainee.domain.Trainee;
import com.cg.trainee.service.MapValidationErrorService;
import com.cg.trainee.service.TraineeService;




@RestController
@RequestMapping("/api/trainee")
public class TraineeController {
      @Autowired
	  private TraineeService traineeservice;
      @Autowired
	     private MapValidationErrorService mapvalidationservice ;
      @GetMapping("/all")
      public Iterable<Trainee> getAllTrainees(){
    	  return traineeservice.findAllTrainees();
      }
      @GetMapping("/{id}")
      public ResponseEntity<?> getTranineeById(@PathVariable int id) {
    	  return new  ResponseEntity<Trainee>(traineeservice.findByTraineeId(id),HttpStatus.OK);
      }
      @GetMapping("/abac/{traineeDomain}")
      public List<Trainee> getTraineeByDomain(@PathVariable String traineeDomain)
      {
    	  return traineeservice.findByTraineeDomain(traineeDomain);
      }
      @DeleteMapping("/{id}")
      public ResponseEntity<?> removeTraineeById(@PathVariable int id) {
    	  traineeservice.deleteTraineeById(id);
    	  return new ResponseEntity<String>("Deleted succesffully "+id,HttpStatus.OK);
      }
      @PutMapping("")
      public ResponseEntity<?> updateTrainee(@Valid @RequestBody Trainee trainee,BindingResult result){
    	  return new ResponseEntity<Trainee>(traineeservice.updateTraineeById(trainee),HttpStatus.OK);
      }
      @PostMapping("")
      public ResponseEntity<?> insertTrainee(@Valid @RequestBody Trainee trainee,BindingResult result){
    	  ResponseEntity<?>  errorMap=mapvalidationservice.mapvalidationError(result);
	    	if(errorMap!=null)
	    		return errorMap;
	 
    	  return new ResponseEntity<Trainee>(traineeservice.SaveTrainee(trainee),HttpStatus.CREATED);
      
      }
      @PatchMapping("/{id}/{domain}")
      public ResponseEntity<?> updateTraineeDomain(@PathVariable int id, @PathVariable String traineeDomain)
      {
    	  return new ResponseEntity<Trainee>(traineeservice.updateByDomain(id,traineeDomain),HttpStatus.OK);
      }
      @PatchMapping("/")
      public ResponseEntity<?> updateTraineeLocation( @RequestParam int traineeId, @RequestParam String traineeLocation)
      {
    	  return new ResponseEntity<Trainee>(traineeservice.updateByLocation(traineeId,traineeLocation),HttpStatus.OK);
      }
      }
      

